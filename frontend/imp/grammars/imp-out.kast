`<k>`(kDefinition(emptyKRequireList(.KList),kModuleList(kModuleList(emptyKModuleList(.KList),kModule(#token("IMP-SYNTAX","KModuleName"),noKAttributesDeclaration(.KList),kImportList(emptyKImportList(.KList),kImport(#token("PREDEF","KModuleName"))),kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(emptyKSentenceList(.KList),kSyntaxProduction(#token("AExp","KSort"),prioritySeqBlock(prodBlock(prodBlock(kProductionWAttr(nonTerminal(#token("Int","KSort")),noKAttributesDeclaration(.KList)),kProductionWAttr(nonTerminal(#token("Id","KSort")),noKAttributesDeclaration(.KList))),kProductionWAttr(kProduction(kProduction(nonTerminal(#token("AExp","KSort")),terminal(#token("\"/\"","KString"))),nonTerminal(#token("AExp","KSort"))),kAttributesDeclaration(kAttributesList(kAttributesList(tagSimple(#token("left","KEY")),tagSimple(#token("strict","KEY"))),tagContent(#token("symbol","KEY"),#token("div","TAGList")))))),noAttribute(.KList),prodBlock(kProductionWAttr(kProduction(kProduction(nonTerminal(#token("AExp","KSort")),terminal(#token("\"+\"","KString"))),nonTerminal(#token("AExp","KSort"))),kAttributesDeclaration(kAttributesList(kAttributesList(tagSimple(#token("left","KEY")),tagSimple(#token("strict","KEY"))),tagContent(#token("symbol","KEY"),#token("plus","TAGList"))))),kProductionWAttr(kProduction(kProduction(terminal(#token("\"(\"","KString")),nonTerminal(#token("AExp","KSort"))),terminal(#token("\")\"","KString"))),kAttributesDeclaration(kAttributesList(tagSimple(#token("bracket","KEY")),tagContent(#token("symbol","KEY"),#token("aExpBracket","TAGList"))))))))),kSyntaxProduction(#token("BExp","KSort"),prioritySeqBlock(prodBlock(prodBlock(kProductionWAttr(nonTerminal(#token("Bool","KSort")),noKAttributesDeclaration(.KList)),kProductionWAttr(kProduction(kProduction(nonTerminal(#token("AExp","KSort")),terminal(#token("\"<=\"","KString"))),nonTerminal(#token("AExp","KSort"))),kAttributesDeclaration(kAttributesList(tagSimple(#token("seqstrict","KEY")),tagContent(#token("symbol","KEY"),#token("lte","TAGList")))))),kProductionWAttr(kProduction(terminal(#token("\"!\"","KString")),nonTerminal(#token("BExp","KSort"))),kAttributesDeclaration(kAttributesList(tagSimple(#token("strict","KEY")),tagContent(#token("symbol","KEY"),#token("not","TAGList")))))),noAttribute(.KList),prodBlock(kProductionWAttr(kProduction(kProduction(nonTerminal(#token("BExp","KSort")),terminal(#token("\"&&\"","KString"))),nonTerminal(#token("BExp","KSort"))),kAttributesDeclaration(kAttributesList(kAttributesList(tagSimple(#token("left","KEY")),tagContent(#token("strict","KEY"),#token("1","TAGList"))),tagContent(#token("symbol","KEY"),#token("and","TAGList"))))),kProductionWAttr(kProduction(kProduction(terminal(#token("\"(\"","KString")),nonTerminal(#token("BExp","KSort"))),terminal(#token("\")\"","KString"))),kAttributesDeclaration(kAttributesList(tagSimple(#token("bracket","KEY")),tagContent(#token("symbol","KEY"),#token("bExpBracket","TAGList"))))))))),kSyntaxProduction(#token("Block","KSort"),prodBlock(kProductionWAttr(kProduction(terminal(#token("\"{\"","KString")),terminal(#token("\"}\"","KString"))),kAttributesDeclaration(tagContent(#token("symbol","KEY"),#token("emptyBlock","TAGList")))),kProductionWAttr(kProduction(kProduction(terminal(#token("\"{\"","KString")),nonTerminal(#token("Stmt","KSort"))),terminal(#token("\"}\"","KString"))),kAttributesDeclaration(tagContent(#token("symbol","KEY"),#token("block","TAGList"))))))),kSyntaxProduction(#token("Stmt","KSort"),prioritySeqBlock(prodBlock(prodBlock(prodBlock(kProductionWAttr(nonTerminal(#token("Block","KSort")),noKAttributesDeclaration(.KList)),kProductionWAttr(kProduction(kProduction(kProduction(nonTerminal(#token("Id","KSort")),terminal(#token("\"=\"","KString"))),nonTerminal(#token("AExp","KSort"))),terminal(#token("\";\"","KString"))),kAttributesDeclaration(kAttributesList(tagContent(#token("strict","KEY"),#token("2","TAGList")),tagContent(#token("symbol","KEY"),#token("assignment","TAGList")))))),kProductionWAttr(kProduction(kProduction(kProduction(kProduction(kProduction(kProduction(terminal(#token("\"if\"","KString")),terminal(#token("\"(\"","KString"))),nonTerminal(#token("BExp","KSort"))),terminal(#token("\")\"","KString"))),nonTerminal(#token("Block","KSort"))),terminal(#token("\"else\"","KString"))),nonTerminal(#token("Block","KSort"))),kAttributesDeclaration(kAttributesList(tagContent(#token("strict","KEY"),#token("1","TAGList")),tagContent(#token("symbol","KEY"),#token("if","TAGList")))))),kProductionWAttr(kProduction(kProduction(kProduction(kProduction(terminal(#token("\"while\"","KString")),terminal(#token("\"(\"","KString"))),nonTerminal(#token("BExp","KSort"))),terminal(#token("\")\"","KString"))),nonTerminal(#token("Block","KSort"))),kAttributesDeclaration(tagContent(#token("symbol","KEY"),#token("while","TAGList"))))),noAttribute(.KList),kProductionWAttr(kProduction(nonTerminal(#token("Stmt","KSort")),nonTerminal(#token("Stmt","KSort"))),kAttributesDeclaration(kAttributesList(tagSimple(#token("left","KEY")),tagContent(#token("symbol","KEY"),#token("consStmt","TAGList")))))))),kSyntaxProduction(#token("Pgm","KSort"),kProductionWAttr(kProduction(kProduction(kProduction(terminal(#token("\"int\"","KString")),nonTerminal(#token("Ids","KSort"))),terminal(#token("\";\"","KString"))),nonTerminal(#token("Stmt","KSort"))),kAttributesDeclaration(tagContent(#token("symbol","KEY"),#token("program","TAGList")))))),kSyntaxProduction(#token("Ids","KSort"),prodBlock(kProductionWAttr(terminal(#token("\".Ids\"","KString")),kAttributesDeclaration(tagContent(#token("symbol","KEY"),#token("emptyIds","TAGList")))),kProductionWAttr(kProduction(kProduction(nonTerminal(#token("Id","KSort")),terminal(#token("\",\"","KString"))),nonTerminal(#token("Ids","KSort"))),kAttributesDeclaration(tagContent(#token("symbol","KEY"),#token("consIds","TAGList"))))))))),kModule(#token("IMP","KModuleName"),noKAttributesDeclaration(.KList),kImportList(emptyKImportList(.KList),kImport(#token("IMP-SYNTAX","KModuleName"))),kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(kSentenceList(emptyKSentenceList(.KList),kSyntaxProduction(#token("KResult","KSort"),prodBlock(kProductionWAttr(nonTerminal(#token("Int","KSort")),noKAttributesDeclaration(.KList)),kProductionWAttr(nonTerminal(#token("Bool","KSort")),noKAttributesDeclaration(.KList))))),kConfiguration(noAttrs(inj(inj(configCell(#token("T","CellName"),cellPropertyList(cellProperty(#token("color","CellName"),#token("\"yellow\"","KString")),cellPropertyListTerminator(.KList)),inj(consCells(inj(configCell(#token("k","CellName"),cellPropertyList(cellProperty(#token("color","CellName"),#token("\"green\"","KString")),cellPropertyListTerminator(.KList)),inj(castToPgm(inj(inj(#token("$PGM","KVariable"))))),#token("k","CellName"))),inj(configCell(#token("state","CellName"),cellPropertyList(cellProperty(#token("color","CellName"),#token("\"red\"","KString")),cellPropertyListTerminator(.KList)),inj(emptyMap(.KList)),#token("state","CellName"))))),#token("T","CellName"))))))),kRule(noAttrs(consCells(kCell(noDots(.KList),rewrites(cast2Id(#token("X","KVariable")),cast2Int(#token("I","KVariable"))),dots(.KList)),stateCell(dots(.KList),mapElement(cast2Id(#token("X","KVariable")),cast2Int(#token("I","KVariable"))),dots(.KList)))))),kRule(noAttrs(kRequires(rewrites(div(cast2Int(#token("I1","KVariable")),cast2Int(#token("I2","KVariable"))),divInt(cast2Int(#token("I1","KVariable")),cast2Int(#token("I2","KVariable")))),neInt(cast2Int(#token("I2","KVariable")),#token("0","Int")))))),kRule(noAttrs(rewrites(plus(cast2Int(#token("I1","KVariable")),cast2Int(#token("I2","KVariable"))),plusInt(cast2Int(#token("I1","KVariable")),cast2Int(#token("I2","KVariable"))))))),kRule(noAttrs(rewrites(lte(cast2Int(#token("I1","KVariable")),cast2Int(#token("I2","KVariable"))),lteInt(cast2Int(#token("I1","KVariable")),cast2Int(#token("I2","KVariable"))))))),kRule(noAttrs(rewrites(not(cast2Bool(#token("T","KVariable"))),notBool(cast2Bool(#token("T","KVariable"))))))),kRule(noAttrs(rewrites(and(boolTrue(.KList),cast2BExp(#token("B","KVariable"))),cast2BExp(#token("B","KVariable")))))),kRule(noAttrs(rewrites(and(boolFalse(.KList),cast2BExp(#token("_","KVariable"))),boolFalse(.KList))))),kRule(attrs(rewrites(emptyBlock(.KList),dotK(.KList)),kAttributesDeclaration(tagSimple(#token("structural","KEY")))))),kRule(attrs(rewrites(block(cast2Stmt(#token("S","KVariable"))),cast2Stmt(#token("S","KVariable"))),kAttributesDeclaration(tagSimple(#token("structural","KEY")))))),kRule(noAttrs(consCells(kCell(noDots(.KList),rewrites(assignment(cast2Id(#token("X","KVariable")),cast2Int(#token("I","KVariable"))),dotK(.KList)),dots(.KList)),stateCell(dots(.KList),mapElement(cast2Id(#token("X","KVariable")),bracket(rewrites(cast2Int(#token("_","KVariable")),cast2Int(#token("I","KVariable"))))),dots(.KList)))))),kRule(attrs(rewrites(consStmt(cast2Stmt(#token("S1","KVariable")),cast2Stmt(#token("S2","KVariable"))),kSequence(cast2Stmt(#token("S1","KVariable")),cast2Stmt(#token("S2","KVariable")))),kAttributesDeclaration(tagSimple(#token("structural","KEY")))))),kRule(noAttrs(rewrites(if(boolTrue(.KList),cast2Block(#token("S","KVariable")),cast2Block(#token("_","KVariable"))),cast2Block(#token("S","KVariable")))))),kRule(noAttrs(rewrites(if(boolFalse(.KList),cast2Block(#token("_","KVariable")),cast2Block(#token("S","KVariable"))),cast2Block(#token("S","KVariable")))))),kRule(attrs(rewrites(while(cast2BExp(#token("B","KVariable")),cast2Block(#token("S","KVariable"))),if(cast2BExp(#token("B","KVariable")),block(consStmt(cast2Block(#token("S","KVariable")),while(cast2BExp(#token("B","KVariable")),cast2Block(#token("S","KVariable"))))),emptyBlock(.KList))),kAttributesDeclaration(tagSimple(#token("structural","KEY")))))),kRule(noAttrs(kRequires(consCells(kCell(noDots(.KList),program(bracket(rewrites(consIds(cast2Id(#token("X","KVariable")),cast2Ids(#token("Xs","KVariable"))),cast2Ids(#token("Xs","KVariable")))),cast2Stmt(#token("_","KVariable"))),noDots(.KList)),stateCell(noDots(.KList),consMap(cast2Map(#token("Rho","KVariable")),bracket(mapElement(rewrites(emptyMap(.KList),cast2Id(#token("X","KVariable"))),#token("0","Int")))),noDots(.KList))),notBool(bracket(inKeys(cast2Id(#token("X","KVariable")),cast2Map(#token("Rho","KVariable"))))))))),kRule(attrs(rewrites(program(emptyIds(.KList),cast2Stmt(#token("S","KVariable"))),cast2Stmt(#token("S","KVariable"))),kAttributesDeclaration(tagSimple(#token("structural","KEY")))))),kSyntaxProduction(#token("Id","KSort"),prodBlock(kProductionWAttr(terminal(#token("\"n\"","KString")),kAttributesDeclaration(tagSimple(#token("token","KEY")))),kProductionWAttr(terminal(#token("\"sum\"","KString")),kAttributesDeclaration(tagSimple(#token("token","KEY")))))))))))
